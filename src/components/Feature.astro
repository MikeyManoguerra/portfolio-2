---
import { Icon } from 'astro-icon/components'

const { icon = 'mdi:rocket', title = 'Title', url = null } = Astro.props;
const linkClass = url ? 'as-link' : '';
---

<div class={`feature ${linkClass}`}>
  <div class="feature__inner flex flex-col gap-4">
    <div class="flex items-center gap-2">
      <Icon name={icon} />
      <div class="content">
        <h3>
          {
            url ? (
              <a class="link" href={url}>
                {title}
              </a>
            ) : (
              title
            )
          }
        </h3>
      </div>
      <p>
        <slot />
      </p>
    </div>
  </div>
</div>

<style lang="scss">
  @use '../assets/scss/base/breakpoint' as *;

  .feature {
    position: relative;
    width: calc(100% - 0.5rem);
    padding-top: 30px;

    @include breakpoint(large) {
      width: 100%;
    }

    &::before,
    &::after {
      content: '';
      position: absolute;
    }

    &::before {
      inset: 0;
      background-color: var(--neutral-100);
      border: 3px solid var(--neutral-700);
      border-radius: 1rem;
      box-shadow: 0 0 0 6px var(--neutral-100);
      z-index: 1;
    }

    &::after {
      background-color: var(--action-color);
      inset: 1rem -0.85rem -0.85rem 1rem;
      border-radius: 1.75rem;
      z-index: 0;
      transition-property: inset;
      transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
      transition-duration: 150ms;
    }

    &.as-link {
      &:hover,
      &:focus-within {
        &::after {
          inset: 0.15rem 0 0.15rem 0;
        }
      }
    }
  }

  .feature__inner {
    position: relative;
    padding: 2rem;
    z-index: 2;
  }

  .link {
    text-decoration: none;

    .feature:hover &,
    &:hover,
    &:focus {
      text-decoration: underline;
      color: var(--action-color-state);
    }

    &::after {
      content: '';
      position: absolute;
      inset: 0;
    }
  }

  :global(.feature [data-icon]) {
    height: auto;
    width: 4rem;
    color: var(--font-color);
  }

  :global(.darkmode .feature::before) {
    background-color: var(--dark-100);
    box-shadow: 0 0 0 6px var(--dark-100);
  }
</style>
